{
  "$schema": "https://unpkg.com/@camunda/zeebe-element-templates-json-schema/resources/schema.json",
  "name": "UiPath Connector Template",
  "id": "48797f22-290c-4ccb-840e-4636af3d3614",
  "appliesTo": [
    "bpmn:Task"
  ],
  "groups": [
    {
      "id": "authentication",
      "label": "Authentication"
    },
    {
      "id": "robot",
      "label": "Robot properties"
    },
    {
      "id": "output",
      "label": "Output"
    }
  ],
  "properties": [
	{
      "label": "Organization Name",
      "description": "UiPath Organization Name",
      "type": "String",
      "value": "",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "organizationName"
      },
      "group": "authentication",
      "constraints": {
        "notEmpty": true
      }
    },
	{
      "label": "Organization ID",
      "description": "",
      "type": "String",
      "value": "",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "organizationId"
      },
      "group": "authentication",
      "constraints": {
        "notEmpty": true
      }
    },
	{
      "label": "Tenant",
      "description": "UiPath Tenant",
      "type": "String",
      "value": "",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "tenant"
      },
      "group": "authentication",
      "constraints": {
        "notEmpty": true
      }
    },

    {
      "label": "Client ID",
      "description": "Client ID from Orchestrator API credentials",
      "type": "String",
      "value": "",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "clientId"
      },
      "group": "authentication",
      "constraints": {
        "notEmpty": true
      }
    },
    {
      "label": "Client Key",
      "description": "Client Key from Orchestrator API credentials",
      "type": "String",
      "value": "",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "clientKey"
      },
      "group": "authentication",
      "constraints": {
        "notEmpty": true
      }
    },
    {
      "label": "Package name",
      "description": "Package to call from orchestrator",
      "type": "String",
      "value": "",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "packageName"
      },
      "group": "robot",
      "constraints": {
        "notEmpty": true
      }
    },
    {
      "label": "Robot input",
      "description": "Input to robot in JSON format",
      "type": "Text",
      "value": "{}",
      "feel": "required",
      "binding": {
        "type": "zeebe:input",
        "name": "robotInput"
      },
      "group": "robot",
      "constraints": {
        "notEmpty": true
      }
    },
	{
      "label": "Polling interval in seconds",
      "description": "Bot completion polling interval",
      "group": "output",
      "type": "Dropdown",
	  "choices": [
          { "name": "1", "value": "1" },
          { "name": "2", "value": "2" },
          { "name": "3", "value": "3" },
          { "name": "4", "value": "4" }
        ],
	  "constraints": {
        "notEmpty": true
	  },
      "binding": {
        "type": "zeebe:input",
        "name": "pollingInterval"
      }
    },
	{
	  "label": "Result Variable",
      "description": "Name of variable to store the response in",
      "group": "output",
      "type": "Hidden",
      "binding": {
        "type": "zeebe:taskHeader",
        "key": "resultVariable"
      },
	  "value": "result"
    },
    {
      "label": "Result Expression",
      "description": "Expression to map the response into process variables",
      "group": "output",
      "type": "String",
	  "optional": true,
	  "value": "output",
      "feel": "required",
      "binding": {
        "type": "zeebe:output",
        "source": "= result.output"
      }
    },
    {
      "type": "Hidden",
      "value": "io.camunda:uipath",
      "binding": {
        "type": "zeebe:taskDefinition:type"
      }
    }
  ],
  "icon": {
    "contents": "data:image/svg+xml,%3C?xml version='1.0' encoding='UTF-8' standalone='no'?%3E%3Csvg   xmlns:dc='http://purl.org/dc/elements/1.1/'   xmlns:cc='http://creativecommons.org/ns%23'   xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns%23'   xmlns:svg='http://www.w3.org/2000/svg'   xmlns='http://www.w3.org/2000/svg'   version='1.0'   width='18'   height='18'   viewBox='0 0 18 18'   preserveAspectRatio='xMidYMid meet'   id='svg1455'%3E  %3Cmetadata     id='metadata1461'%3E    %3Crdf:RDF%3E      %3Ccc:Work         rdf:about=''%3E        %3Cdc:format%3Eimage/svg+xml%3C/dc:format%3E        %3Cdc:type           rdf:resource='http://purl.org/dc/dcmitype/StillImage' /%3E        %3Cdc:title%3E%3C/dc:title%3E      %3C/cc:Work%3E    %3C/rdf:RDF%3E  %3C/metadata%3E  %3Cdefs     id='defs1459' /%3E  %3Cstyle     type='text/css'     id='style1443'%3E .st0%7Bfill:%230085CA;%7D%3C/style%3E  %3Cg     transform='matrix(0.009,0,0,-0.009,0,18)'     fill='%23000000'     stroke='none'     id='g1453'%3E    %3Cpath       class='st0'       d='M 0,1000 V 0 H 1000 2000 V 1000 2000 H 1000 0 Z m 1790,0 V 210 H 1000 210 v 790 790 h 790 790 z'       id='path1445' /%3E    %3Cpath       class='st0'       d='m 1424,1601 c -31,-13 -61,-55 -68,-95 -20,-105 99,-182 192,-126 68,42 79,129 23,192 -22,25 -36,31 -77,34 -27,2 -59,0 -70,-5 z'       id='path1447' /%3E    %3Cpath       class='st0'       d='m 390,1133 c 0,-368 4,-402 50,-497 31,-66 93,-124 168,-159 64,-31 73,-32 187,-32 101,1 129,4 177,24 109,43 200,151 227,272 6,25 11,194 11,392 v 347 h -99 -100 l -3,-342 C 1005,834 1003,790 987,755 951,674 897,638 811,637 708,636 651,671 613,755 c -15,35 -18,82 -21,383 l -4,342 h -99 -99 z'       id='path1449' /%3E    %3Cpath       class='st0'       d='M 1380,855 V 450 h 100 100 v 405 405 h -100 -100 z'       id='path1451' /%3E  %3C/g%3E%3C/svg%3E"	
  }
}
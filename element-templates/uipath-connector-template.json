{
  "$schema": "https://unpkg.com/@camunda/zeebe-element-templates-json-schema/resources/schema.json",
  "name": "UiPath Connector Template",
  "id": "48797f22-290c-4ccb-840e-4636af3d3614",
  "appliesTo": [
    "bpmn:Task"
  ],
  "groups": [
    {
      "id": "authentication",
      "label": "Authentication"
    },
    {
      "id": "robot",
      "label": "Robot properties"
    },
    {
      "id": "output",
      "label": "Output"
    }
  ],
  "properties": [
	{
      "label": "Organization Name",
      "description": "UiPath Organization Name",
      "type": "String",
      "value": "",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "organizationName"
      },
      "group": "authentication",
      "constraints": {
        "notEmpty": true
      }
    },
	{
      "label": "Organization ID",
      "description": "",
      "type": "String",
      "value": "",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "organizationId"
      },
      "group": "authentication",
      "constraints": {
        "notEmpty": true
      }
    },
	{
      "label": "Tenant",
      "description": "UiPath Tenant",
      "type": "String",
      "value": "",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "tenant"
      },
      "group": "authentication",
      "constraints": {
        "notEmpty": true
      }
    },

    {
      "label": "Client ID",
      "description": "Client ID from Orchestrator API credentials",
      "type": "String",
      "value": "",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "clientId"
      },
      "group": "authentication",
      "constraints": {
        "notEmpty": true
      }
    },
    {
      "label": "Client Key",
      "description": "Client Key from Orchestrator API credentials",
      "type": "String",
      "value": "",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "clientKey"
      },
      "group": "authentication",
      "constraints": {
        "notEmpty": true
      }
    },
    {
      "label": "Package name",
      "description": "Package to call from orchestrator",
      "type": "String",
      "value": "",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "packageName"
      },
      "group": "robot",
      "constraints": {
        "notEmpty": true
      }
    },
    {
      "label": "Robot input",
      "description": "Input to robot in JSON format",
      "type": "Text",
      "value": "{}",
      "feel": "required",
      "binding": {
        "type": "zeebe:input",
        "name": "robotInput"
      },
      "group": "robot",
      "constraints": {
        "notEmpty": true
      }
    },
	{
      "label": "Polling interval in seconds",
      "description": "Bot completion polling interval",
      "group": "output",
      "type": "Dropdown",
	  "choices": [
          { "name": "1", "value": "1" },
          { "name": "2", "value": "2" },
          { "name": "3", "value": "3" },
          { "name": "4", "value": "4" }
        ],
	  "constraints": {
        "notEmpty": true
	  },
      "binding": {
        "type": "zeebe:input",
        "name": "pollingInterval"
      }
    },
	{
	  "label": "Result Variable",
      "description": "Name of variable to store the response in",
      "group": "output",
      "type": "Hidden",
      "binding": {
        "type": "zeebe:taskHeader",
        "key": "resultVariable"
      },
	  "value": "result"
    },
    {
      "label": "Result Expression",
      "description": "Expression to map the response into process variables",
      "group": "output",
      "type": "String",
	  "optional": true,
	  "value": "output",
      "feel": "required",
      "binding": {
        "type": "zeebe:output",
        "source": "= result.output"
      }
    },
    {
      "type": "Hidden",
      "value": "io.camunda:uipath",
      "binding": {
        "type": "zeebe:taskDefinition:type"
      }
    }
  ],
  "icon": {
    "contents": "data:image/svg+xml,%3C?xml version='1.0' encoding='UTF-8' standalone='no'?%3E%3Csvg   xmlns:dc='http://purl.org/dc/elements/1.1/'   xmlns:cc='http://creativecommons.org/ns%23'   xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns%23'   xmlns:svg='http://www.w3.org/2000/svg'   xmlns='http://www.w3.org/2000/svg'   version='1.0'   id='katman_1'   x='0px'   y='0px'   viewBox='0 0 18 18'   xml:space='preserve'   width='18'   height='18'%3E%3Cmetadata   id='metadata873'%3E%3Crdf:RDF%3E%3Ccc:Work       rdf:about=''%3E%3Cdc:format%3Eimage/svg+xml%3C/dc:format%3E%3Cdc:type         rdf:resource='http://purl.org/dc/dcmitype/StillImage' /%3E%3Cdc:title%3E%3C/dc:title%3E%3C/cc:Work%3E%3C/rdf:RDF%3E%3C/metadata%3E%3Cdefs   id='defs871' /%3E%3Cstyle   type='text/css'   id='style860'%3E .st0%7Bfill:%230085CA;%7D%3C/style%3E%3Cg   id='g866'   transform='matrix(0.00968627,0,0,0.00968627,-6.6764499,-2.5113737)'%3E %3Cpath   class='st0'   d='M 2530,2058.7 V 313.3 c 0,-28.2 -22.2,-56.5 -55.6,-56.5 H 761.6 c -33.4,0 -55.6,22.6 -55.6,56.5 v 1745.3 c 0,28.3 22.3,56.5 55.6,56.5 h 1712.8 c 33.3,0 55.6,-28.2 55.6,-56.4 z m -72.3,-17 H 778.3 V 330.3 h 1679.4 z'   id='path862' /%3E %3Cpath   class='st0'   d='m 1401.1,1765 c 250.2,0 411.5,-141.3 411.5,-508.4 V 635.3 h -183.5 v 638.2 c 0,242.9 -94.5,322 -228,322 -133.5,0 -216.9,-79.1 -216.9,-322 V 640.9 H 989.6 v 621.4 c 0,361.5 161.3,502.7 411.5,502.7 z m 756.3,-977.2 c 66.8,0 116.8,-45.2 116.8,-107.3 0,-67.8 -50,-113 -116.8,-113 -66.8,0 -116.8,45.2 -116.8,113 0,62.1 50.1,107.3 116.8,107.3 z m 94.5,146.8 H 2062.8 V 1765 h 189.1 z'   id='path864' /%3E%3C/g%3E%3C/svg%3E"
	}
}